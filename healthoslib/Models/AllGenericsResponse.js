/**
 * HealthOSLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of AllGenericsResponse
 *
 * @constructor
 */
angular.module('HealthOSLib')
    .factory('AllGenericsResponse', ['BaseModel',
        function (BaseModel) {
            var AllGenericsResponse = function (obj) {
                if (!obj) {
                    this.name = null;
                    this.pregnancyCategory = null;
                    this.lactationCategory = null;
                    this.instructions = null;
                    this.faqs = null;
                    this.genricId = null;
                    this.sideEffects = null;
                    this.howItWorks = null;
                    this.therapeuticClass = null;
                    this.usedFor = null;
                    this.strength = null;
                    this.schedule = null;
                    this.alcoholInteractionDescription = null;
                    this.alcoholNteraction = null;
        
                    // Append to variable dictionary
                    this._variableDict['pregnancyCategory'] = 'pregnancy_category';
                    this._variableDict['lactationCategory'] = 'lactation_category';
                    this._variableDict['genricId'] = 'genric_id';
                    this._variableDict['sideEffects'] = 'side_effects';
                    this._variableDict['howItWorks'] = 'how_it_works';
                    this._variableDict['therapeuticClass'] = 'therapeutic_class';
                    this._variableDict['usedFor'] = 'used_for';
                    this._variableDict['alcoholInteractionDescription'] = 'alcohol_interaction_description';
                    this._variableDict['alcoholNteraction'] = 'alcohol_nteraction';
                } else {
                    this.name = obj.name;
                    this.pregnancyCategory = obj.pregnancy_category;
                    this.lactationCategory = obj.lactation_category;
                    this.instructions = obj.instructions;
                    this.faqs = obj.faqs;
                    this.genricId = obj.genric_id;
                    this.sideEffects = obj.side_effects;
                    this.howItWorks = obj.how_it_works;
                    this.therapeuticClass = obj.therapeutic_class;
                    this.usedFor = obj.used_for;
                    this.strength = obj.strength;
                    this.schedule = obj.schedule;
                    this.alcoholInteractionDescription = obj.alcohol_interaction_description;
                    this.alcoholNteraction = obj.alcohol_nteraction;
            
                    // Append to variable dictionary
                    this._variableDict['pregnancyCategory'] = 'pregnancy_category';
                    this._variableDict['lactationCategory'] = 'lactation_category';
                    this._variableDict['genricId'] = 'genric_id';
                    this._variableDict['sideEffects'] = 'side_effects';
                    this._variableDict['howItWorks'] = 'how_it_works';
                    this._variableDict['therapeuticClass'] = 'therapeutic_class';
                    this._variableDict['usedFor'] = 'used_for';
                    this._variableDict['alcoholInteractionDescription'] = 'alcohol_interaction_description';
                    this._variableDict['alcoholNteraction'] = 'alcohol_nteraction';
                }
            }
    
            AllGenericsResponse.prototype = new BaseModel();
            AllGenericsResponse.prototype.constructor = AllGenericsResponse;
        
            /**
             * TODO: Write general description for this method
             *
             * @return {string}
             */
            AllGenericsResponse.prototype.getName = function () {
                return this.name;
            };
        
            /**
             * Setter for Name
             * 
             * @param {string} value 
             */
            AllGenericsResponse.prototype.setName = function (value) {
                this.name = value;
            };
        
            /**
             * TODO: Write general description for this method
             *
             * @return {string}
             */
            AllGenericsResponse.prototype.getPregnancyCategory = function () {
                return this.pregnancyCategory;
            };
        
            /**
             * Setter for PregnancyCategory
             * 
             * @param {string} value 
             */
            AllGenericsResponse.prototype.setPregnancyCategory = function (value) {
                this.pregnancyCategory = value;
            };
        
            /**
             * TODO: Write general description for this method
             *
             * @return {string}
             */
            AllGenericsResponse.prototype.getLactationCategory = function () {
                return this.lactationCategory;
            };
        
            /**
             * Setter for LactationCategory
             * 
             * @param {string} value 
             */
            AllGenericsResponse.prototype.setLactationCategory = function (value) {
                this.lactationCategory = value;
            };
        
            /**
             * TODO: Write general description for this method
             *
             * @return {string}
             */
            AllGenericsResponse.prototype.getInstructions = function () {
                return this.instructions;
            };
        
            /**
             * Setter for Instructions
             * 
             * @param {string} value 
             */
            AllGenericsResponse.prototype.setInstructions = function (value) {
                this.instructions = value;
            };
        
            /**
             * TODO: Write general description for this method
             *
             * @return {string}
             */
            AllGenericsResponse.prototype.getFaqs = function () {
                return this.faqs;
            };
        
            /**
             * Setter for Faqs
             * 
             * @param {string} value 
             */
            AllGenericsResponse.prototype.setFaqs = function (value) {
                this.faqs = value;
            };
        
            /**
             * TODO: Write general description for this method
             *
             * @return {int}
             */
            AllGenericsResponse.prototype.getGenricId = function () {
                return this.genricId;
            };
        
            /**
             * Setter for GenricId
             * 
             * @param {int} value 
             */
            AllGenericsResponse.prototype.setGenricId = function (value) {
                this.genricId = value;
            };
        
            /**
             * TODO: Write general description for this method
             *
             * @return {string}
             */
            AllGenericsResponse.prototype.getSideEffects = function () {
                return this.sideEffects;
            };
        
            /**
             * Setter for SideEffects
             * 
             * @param {string} value 
             */
            AllGenericsResponse.prototype.setSideEffects = function (value) {
                this.sideEffects = value;
            };
        
            /**
             * TODO: Write general description for this method
             *
             * @return {string}
             */
            AllGenericsResponse.prototype.getHowItWorks = function () {
                return this.howItWorks;
            };
        
            /**
             * Setter for HowItWorks
             * 
             * @param {string} value 
             */
            AllGenericsResponse.prototype.setHowItWorks = function (value) {
                this.howItWorks = value;
            };
        
            /**
             * TODO: Write general description for this method
             *
             * @return {string}
             */
            AllGenericsResponse.prototype.getTherapeuticClass = function () {
                return this.therapeuticClass;
            };
        
            /**
             * Setter for TherapeuticClass
             * 
             * @param {string} value 
             */
            AllGenericsResponse.prototype.setTherapeuticClass = function (value) {
                this.therapeuticClass = value;
            };
        
            /**
             * TODO: Write general description for this method
             *
             * @return {string}
             */
            AllGenericsResponse.prototype.getUsedFor = function () {
                return this.usedFor;
            };
        
            /**
             * Setter for UsedFor
             * 
             * @param {string} value 
             */
            AllGenericsResponse.prototype.setUsedFor = function (value) {
                this.usedFor = value;
            };
        
            /**
             * TODO: Write general description for this method
             *
             * @return {string}
             */
            AllGenericsResponse.prototype.getStrength = function () {
                return this.strength;
            };
        
            /**
             * Setter for Strength
             * 
             * @param {string} value 
             */
            AllGenericsResponse.prototype.setStrength = function (value) {
                this.strength = value;
            };
        
            /**
             * TODO: Write general description for this method
             *
             * @return {string}
             */
            AllGenericsResponse.prototype.getSchedule = function () {
                return this.schedule;
            };
        
            /**
             * Setter for Schedule
             * 
             * @param {string} value 
             */
            AllGenericsResponse.prototype.setSchedule = function (value) {
                this.schedule = value;
            };
        
            /**
             * TODO: Write general description for this method
             *
             * @return {string}
             */
            AllGenericsResponse.prototype.getAlcoholInteractionDescription = function () {
                return this.alcoholInteractionDescription;
            };
        
            /**
             * Setter for AlcoholInteractionDescription
             * 
             * @param {string} value 
             */
            AllGenericsResponse.prototype.setAlcoholInteractionDescription = function (value) {
                this.alcoholInteractionDescription = value;
            };
        
            /**
             * TODO: Write general description for this method
             *
             * @return {bool}
             */
            AllGenericsResponse.prototype.getAlcoholNteraction = function () {
                return this.alcoholNteraction;
            };
        
            /**
             * Setter for AlcoholNteraction
             * 
             * @param {bool} value 
             */
            AllGenericsResponse.prototype.setAlcoholNteraction = function (value) {
                this.alcoholNteraction = value;
            };
        
            return AllGenericsResponse;
        }
    ]);

}(angular));
