/**
 * HealthOSLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of SearchExercisesResponse16
 *
 * @constructor
 */
angular.module('HealthOSLib')
    .factory('SearchExercisesResponse16', ['BaseModel',
        function (BaseModel) {
            var SearchExercisesResponse16 = function (obj) {
                if (!obj) {
                    this.name = null;
                    this.category = null;
                    this.caloryCount = null;
                    this.cardioSubcategory = null;
                    this.primaryMuscleGroup = null;
                    this.exerciseId = null;
                    this.searchScore = null;
        
                    // Append to variable dictionary
                    this._variableDict['caloryCount'] = 'calory_count';
                    this._variableDict['cardioSubcategory'] = 'cardio_subcategory';
                    this._variableDict['primaryMuscleGroup'] = 'primary_muscle_group';
                    this._variableDict['exerciseId'] = 'exercise_id';
                    this._variableDict['searchScore'] = 'search_score';
                } else {
                    this.name = obj.name;
                    this.category = obj.category;
                    this.caloryCount = obj.calory_count;
                    this.cardioSubcategory = obj.cardio_subcategory;
                    this.primaryMuscleGroup = obj.primary_muscle_group;
                    this.exerciseId = obj.exercise_id;
                    this.searchScore = obj.search_score;
            
                    // Append to variable dictionary
                    this._variableDict['caloryCount'] = 'calory_count';
                    this._variableDict['cardioSubcategory'] = 'cardio_subcategory';
                    this._variableDict['primaryMuscleGroup'] = 'primary_muscle_group';
                    this._variableDict['exerciseId'] = 'exercise_id';
                    this._variableDict['searchScore'] = 'search_score';
                }
            }
    
            SearchExercisesResponse16.prototype = new BaseModel();
            SearchExercisesResponse16.prototype.constructor = SearchExercisesResponse16;
        
            /**
             * TODO: Write general description for this method
             *
             * @return {string}
             */
            SearchExercisesResponse16.prototype.getName = function () {
                return this.name;
            };
        
            /**
             * Setter for Name
             * 
             * @param {string} value 
             */
            SearchExercisesResponse16.prototype.setName = function (value) {
                this.name = value;
            };
        
            /**
             * TODO: Write general description for this method
             *
             * @return {string}
             */
            SearchExercisesResponse16.prototype.getCategory = function () {
                return this.category;
            };
        
            /**
             * Setter for Category
             * 
             * @param {string} value 
             */
            SearchExercisesResponse16.prototype.setCategory = function (value) {
                this.category = value;
            };
        
            /**
             * TODO: Write general description for this method
             *
             * @return {string}
             */
            SearchExercisesResponse16.prototype.getCaloryCount = function () {
                return this.caloryCount;
            };
        
            /**
             * Setter for CaloryCount
             * 
             * @param {string} value 
             */
            SearchExercisesResponse16.prototype.setCaloryCount = function (value) {
                this.caloryCount = value;
            };
        
            /**
             * TODO: Write general description for this method
             *
             * @return {string}
             */
            SearchExercisesResponse16.prototype.getCardioSubcategory = function () {
                return this.cardioSubcategory;
            };
        
            /**
             * Setter for CardioSubcategory
             * 
             * @param {string} value 
             */
            SearchExercisesResponse16.prototype.setCardioSubcategory = function (value) {
                this.cardioSubcategory = value;
            };
        
            /**
             * TODO: Write general description for this method
             *
             * @return {string}
             */
            SearchExercisesResponse16.prototype.getPrimaryMuscleGroup = function () {
                return this.primaryMuscleGroup;
            };
        
            /**
             * Setter for PrimaryMuscleGroup
             * 
             * @param {string} value 
             */
            SearchExercisesResponse16.prototype.setPrimaryMuscleGroup = function (value) {
                this.primaryMuscleGroup = value;
            };
        
            /**
             * TODO: Write general description for this method
             *
             * @return {string}
             */
            SearchExercisesResponse16.prototype.getExerciseId = function () {
                return this.exerciseId;
            };
        
            /**
             * Setter for ExerciseId
             * 
             * @param {string} value 
             */
            SearchExercisesResponse16.prototype.setExerciseId = function (value) {
                this.exerciseId = value;
            };
        
            /**
             * TODO: Write general description for this method
             *
             * @return {double}
             */
            SearchExercisesResponse16.prototype.getSearchScore = function () {
                return this.searchScore;
            };
        
            /**
             * Setter for SearchScore
             * 
             * @param {double} value 
             */
            SearchExercisesResponse16.prototype.setSearchScore = function (value) {
                this.searchScore = value;
            };
        
            return SearchExercisesResponse16;
        }
    ]);

}(angular));
