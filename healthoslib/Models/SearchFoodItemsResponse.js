/**
 * HealthOSLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of SearchFoodItemsResponse
 *
 * @constructor
 */
angular.module('HealthOSLib')
    .factory('SearchFoodItemsResponse', ['BaseModel',
        function (BaseModel) {
            var SearchFoodItemsResponse = function (obj) {
                if (!obj) {
                    this.calories = null;
                    this.itemName = null;
                    this.servingQty = null;
                    this.servingUnit = null;
                    this.foodBrandId = null;
                    this.foodItemId = null;
                    this.searchScore = null;
        
                    // Append to variable dictionary
                    this._variableDict['itemName'] = 'item_name';
                    this._variableDict['servingQty'] = 'serving_qty';
                    this._variableDict['servingUnit'] = 'serving_unit';
                    this._variableDict['foodBrandId'] = 'food_brand_id';
                    this._variableDict['foodItemId'] = 'food_item_id';
                    this._variableDict['searchScore'] = 'search_score';
                } else {
                    this.calories = obj.calories;
                    this.itemName = obj.item_name;
                    this.servingQty = obj.serving_qty;
                    this.servingUnit = obj.serving_unit;
                    this.foodBrandId = obj.food_brand_id;
                    this.foodItemId = obj.food_item_id;
                    this.searchScore = obj.search_score;
            
                    // Append to variable dictionary
                    this._variableDict['itemName'] = 'item_name';
                    this._variableDict['servingQty'] = 'serving_qty';
                    this._variableDict['servingUnit'] = 'serving_unit';
                    this._variableDict['foodBrandId'] = 'food_brand_id';
                    this._variableDict['foodItemId'] = 'food_item_id';
                    this._variableDict['searchScore'] = 'search_score';
                }
            }
    
            SearchFoodItemsResponse.prototype = new BaseModel();
            SearchFoodItemsResponse.prototype.constructor = SearchFoodItemsResponse;
        
            /**
             * TODO: Write general description for this method
             *
             * @return {int}
             */
            SearchFoodItemsResponse.prototype.getCalories = function () {
                return this.calories;
            };
        
            /**
             * Setter for Calories
             * 
             * @param {int} value 
             */
            SearchFoodItemsResponse.prototype.setCalories = function (value) {
                this.calories = value;
            };
        
            /**
             * TODO: Write general description for this method
             *
             * @return {string}
             */
            SearchFoodItemsResponse.prototype.getItemName = function () {
                return this.itemName;
            };
        
            /**
             * Setter for ItemName
             * 
             * @param {string} value 
             */
            SearchFoodItemsResponse.prototype.setItemName = function (value) {
                this.itemName = value;
            };
        
            /**
             * TODO: Write general description for this method
             *
             * @return {double}
             */
            SearchFoodItemsResponse.prototype.getServingQty = function () {
                return this.servingQty;
            };
        
            /**
             * Setter for ServingQty
             * 
             * @param {double} value 
             */
            SearchFoodItemsResponse.prototype.setServingQty = function (value) {
                this.servingQty = value;
            };
        
            /**
             * TODO: Write general description for this method
             *
             * @return {string}
             */
            SearchFoodItemsResponse.prototype.getServingUnit = function () {
                return this.servingUnit;
            };
        
            /**
             * Setter for ServingUnit
             * 
             * @param {string} value 
             */
            SearchFoodItemsResponse.prototype.setServingUnit = function (value) {
                this.servingUnit = value;
            };
        
            /**
             * TODO: Write general description for this method
             *
             * @return {string}
             */
            SearchFoodItemsResponse.prototype.getFoodBrandId = function () {
                return this.foodBrandId;
            };
        
            /**
             * Setter for FoodBrandId
             * 
             * @param {string} value 
             */
            SearchFoodItemsResponse.prototype.setFoodBrandId = function (value) {
                this.foodBrandId = value;
            };
        
            /**
             * TODO: Write general description for this method
             *
             * @return {string}
             */
            SearchFoodItemsResponse.prototype.getFoodItemId = function () {
                return this.foodItemId;
            };
        
            /**
             * Setter for FoodItemId
             * 
             * @param {string} value 
             */
            SearchFoodItemsResponse.prototype.setFoodItemId = function (value) {
                this.foodItemId = value;
            };
        
            /**
             * TODO: Write general description for this method
             *
             * @return {double}
             */
            SearchFoodItemsResponse.prototype.getSearchScore = function () {
                return this.searchScore;
            };
        
            /**
             * Setter for SearchScore
             * 
             * @param {double} value 
             */
            SearchFoodItemsResponse.prototype.setSearchScore = function (value) {
                this.searchScore = value;
            };
        
            return SearchFoodItemsResponse;
        }
    ]);

}(angular));
