/**
 * HealthOSLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of Usage
 *
 * @constructor
 */
angular.module('HealthOSLib')
    .factory('Usage', ['BaseModel',
        function (BaseModel) {
            var Usage = function (obj) {
                if (!obj) {
                    this.term = null;
                    this.count = null;
                    this.percent = null;
                } else {
                    this.term = obj.term;
                    this.count = obj.count;
                    this.percent = obj.percent;
                }
            }
    
            Usage.prototype = new BaseModel();
            Usage.prototype.constructor = Usage;
        
            /**
             * TODO: Write general description for this method
             *
             * @return {string}
             */
            Usage.prototype.getTerm = function () {
                return this.term;
            };
        
            /**
             * Setter for Term
             * 
             * @param {string} value 
             */
            Usage.prototype.setTerm = function (value) {
                this.term = value;
            };
        
            /**
             * TODO: Write general description for this method
             *
             * @return {int}
             */
            Usage.prototype.getCount = function () {
                return this.count;
            };
        
            /**
             * Setter for Count
             * 
             * @param {int} value 
             */
            Usage.prototype.setCount = function (value) {
                this.count = value;
            };
        
            /**
             * TODO: Write general description for this method
             *
             * @return {double}
             */
            Usage.prototype.getPercent = function () {
                return this.percent;
            };
        
            /**
             * Setter for Percent
             * 
             * @param {double} value 
             */
            Usage.prototype.setPercent = function (value) {
                this.percent = value;
            };
        
            return Usage;
        }
    ]);

}(angular));
